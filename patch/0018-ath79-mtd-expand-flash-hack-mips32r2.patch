diff --git a/target/linux/ath79/patches-6.6/912-tp-link_mtd_expand_flash_hack.patch b/target/linux/ath79/patches-6.6/912-tp-link_mtd_expand_flash_hack.patch
new file mode 100644
index 0000000..5ae4ee2
--- /dev/null
+++ b/target/linux/ath79/patches-6.6/912-tp-link_mtd_expand_flash_hack.patch
@@ -0,0 +1,45 @@
+--- a/drivers/mtd/parsers/ofpart_core.c	2024-09-30 22:25:15.000000000 +0800
++++ b/drivers/mtd/parsers/ofpart_core.c	2024-10-02 18:19:58.991844906 +0800
+@@ -52,6 +52,9 @@ static int parse_fixed_partitions(struct
+ 	int nr_parts, i, ret = 0;
+ 	bool dedicated = true;
+ 
++	int fw_idx,last_part_idx,count; // track which index is firmware partition on and the index of the last partition
++	uint64_t total_size,diff; // use to calculate total size which is offset of last partition + size and store the difference
++
+ 	/* Pull of_node from the master device node */
+ 	mtd_node = mtd_get_of_node(master);
+ 	if (!mtd_node)
+@@ -157,6 +160,8 @@ static int parse_fixed_partitions(struct
+ 			partname = of_get_property(pp, "name", &len);
+ 		parts[i].name = partname;
+ 
++		if (!strcmp(partname, "firmware"))fw_idx=i; //get the index of firmware
++
+ 		if (of_get_property(pp, "read-only", &len))
+ 			parts[i].mask_flags |= MTD_WRITEABLE;
+ 
+@@ -166,11 +171,23 @@ static int parse_fixed_partitions(struct
+ 		if (of_property_read_bool(pp, "slc-mode"))
+ 			parts[i].add_flags |= MTD_SLC_ON_MLC_EMULATION;
+ 
++		last_part_idx=i; //get the index of the last partition
++
+ 		i++;
+ 	}
+ 
+ 	if (!nr_parts)
+ 		goto ofpart_none;
++
++	total_size=parts[last_part_idx].offset+parts[last_part_idx].size; //calculate total size = last partition offset + size
++	if(master->size > total_size) //if flash is modified then adjust
++	{
++		diff = master->size - total_size; //get the difference
++		parts[fw_idx].size = parts[fw_idx].size + diff; //increase the size of firmware
++		for (count=fw_idx+1;count<=last_part_idx;count++){
++			parts[count].offset=parts[count].offset+diff; //increase all the offsets
++		}
++	}
+ 
+ 	if (quirks && quirks->post_parse)
+ 		quirks->post_parse(master, parts, nr_parts);
